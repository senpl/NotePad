/*
 * Copyright (c) 2015 Jonas Kalderstam.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.2.1'
    // the latest version of the android-apt plugin for annotations
    //classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    // For publishing stuff to Google Play
//    classpath 'com.github.triplet.gradle:play-publisher:1.1.4'
  }
}

// Apply android plugin first
apply plugin: 'com.android.application'
//apply plugin: 'com.github.triplet.play'

repositories {
  google()
  jcenter()
}

//play {
////  track = 'beta'
////  serviceAccountEmail = '724886095148-vib4jepvj4q8snt1hrqtopncijipk1eu@developer.gserviceaccount.com'
////  pk12File = file('/home/jonas/.ssh/Google Play Android Developer-bda1f9b450d2.p12')
//}

// query git for the the SHA, Tag and commit count. Use these to automate versioning.
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def gitCommitCount =
        Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

android {

  compileSdkVersion 27
  buildToolsVersion '27.1.0'

  flavorDimensions "default"

  dataBinding.enabled = true

  lintOptions {
    abortOnError false
  }

  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
  }

  defaultConfig {
    multiDexEnabled true
    applicationId "com.nononsenseapps.notepad"
    minSdkVersion 26
    targetSdkVersion 27
    // 60000 to be above all previous versions before gitCommitCount was used
    versionCode 60000 + gitCommitCount
    versionName gitTag
    archivesBaseName = "nononsensenotes-${gitTag}".toString()

    resValue "string", "VERSION_NAME", "${gitTag}"
    resValue "string", "GIT_SHA", "${gitSha}"
    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    // If Non-Free libraries are to be used
    buildConfigField "boolean", "NONFREE", "false"
    buildConfigField "boolean", "DROPBOX_ENABLED", "false"
    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  productFlavors {
    free {}
//    play {
//      // If Non-Free libraries are to be used
//      buildConfigField "boolean", "NONFREE", "true"
//      buildConfigField "boolean", "DROPBOX_ENABLED", "true"
//    }
  }

  sourceSets {
//    playBeta {
//      // Include play sources
//      java.srcDirs = ['src/play/java']
//      res.srcDirs = ['src/play/res', 'src/playBeta/res']
//      manifest.srcFile 'src/play/AndroidManifest.xml'
//    }
  }

  if (project.hasProperty('STORE_FILE')) {
    signingConfigs {
      release {
        storeFile file(STORE_FILE)
        storePassword STORE_PASSWORD
        keyAlias KEY_ALIAS
        keyPassword KEY_PASSWORD
      }
    }

    buildTypes {
      release {
        signingConfig signingConfigs.release
      }
    }
  } else {
    println "No key store defined. Signed release not available..."
  }
}

dependencies {
  //compile fileTree(dir: 'libs', include: '*.jar')
//  compile 'com.android.support:support-v4:23.1.0'
  compile "com.android.support:appcompat-v7:27.1.0"
  compile 'com.android.support:design:27.1.0'
  compile 'com.android.support:recyclerview-v7:27.1.0'
  //compile 'com.android.support:preference-v7:23.1.0'
  compile 'joda-time:joda-time:2.3'
  // Dashclock
  compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
  // FilePicker
  compile 'com.nononsenseapps:filepicker:2.4.2'
  // OrgParser
  compile 'org.cowboyprogrammer:orgparser:1.3.0'
  // For Sync
  compile 'com.squareup.retrofit:retrofit:1.6.1'
  // Included libraries
  compile project(':external:datetimepicker')
  // Dropbox and non-free stuff
//  playCompile fileTree(dir: 'src/play/libs', include: '*.jar')
//  playBetaCompile fileTree(dir: 'src/play/libs', include: '*.jar')
  // Tests
  androidTestCompile 'com.squareup.spoon:spoon-client:1.1.1'
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
  androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.android.support', module: 'support-v4'
    exclude group: 'com.android.support', module: 'design'
    exclude group: 'com.android.support', module: 'recyclerview-v7'
  }
}
